자바스크립트가 문자를 다루는 방법

var 문자 = `손흥민`;

◆ backquote 문자열의 장점

1. 엔터키 가능
2. 중간에 변수를 넣기 쉬움

(예전방식)
var 변수 = '손흥민';
var 문자 = '안녕하세요 저는 ' + 변수 + '입니다';
console.log(문자);

(ES6방식) `문자${변수}`
var 문자 = `안녕하세요 저는 ${변수}입니다.`
console.log(문자);

- HTML템플릿 작성시 유용하다.

var 템플릿 = `
<div>
  <div>
    ${변수명}
  </div>
</div>`;

◆ tagged literal
backquote문자열 + 함수

function 함수(){
    return 10
}
console.log(함수`어쩌구저쩌구`) // 10이 출력됨

- 함수를 실행하려면 함수() 해야한다. 그런데 소괄호 대신에 `문자열`을 써도 됨.

◆ `문자`를 해체분석할 수 있다.
단어 순서를 변경하거나, 단어를 제거하거나, ${변수}를 옮기거나 쉽게 가능하다.
해체분석용 함수를 만든 뒤에 파라미터 두 개 넣기.

var 변수 = '손흥민';
var 문자 = `안녕하세요 ${변수}입니다`

function 해체분석기(문자들,변수들,변수들2) {
    console.log(문자들); // 첫번째 파라미터 : 문자들을 Array화 해준다. 안녕하세요, 입니다 가 있는 array가 출력됨
    console.log(변수들); // 두번째 파라미터 : 첫번째 ${변수}를 뜻한다. 손흥민이 출력됨
    console.log(변수들2); // 세번째 파라미터 : 두번째 ${변수}를 뜻한다. 손흥민이 출력됨
}

해체분석기`안녕하세요 ${변수}입니다 ${변수}` // 해체분석기 함수로 오른쪽 문자열을 해체한 것. 

----------------------

tagged literal 사용예시) 글자의 순서를 변경하고 싶을 때.

var 변수 = '손흥민';
var 문자 = `안녕하세요 ${변수}입니다`

function 해체분석기(문자들,변수들){
    console.log(문자들[1] + 문자들[0]) // 입니다안녕하세요 출력
    console.log(문자들[1] + 변수들 + 문자들[0]) // 입니다손흥민안녕하세요 출력
}

해체분석기`안녕하세요 ${변수}입니다`

----------------------------------------------------------------------------------------
연습문제1) 양말과 바지의 갯수를 바꾸려면?

var pants = 20;
var socks = 100;

`바지${pants} 양말${socks}`; 

function 해체분석기(문자들,변수들1,변수들2){
    console.log(문자들[1] + 변수들1 + 문자들[0] + 변수들2)
}
해체분석기`바지${pants} 양말${socks}`; 

----------------------------------------------------------------------------------------
연습문제2) 바지가 0개면 바지 안팔아요 양말 100 이라는 문자로 바꾸는 해체분석기 제작하기

var pants = 0;
var socks = 100;

`바지${pants} 양말${socks}`; 

function 해체분석기(문자들,변수들1,변수들2){
    if( 변수들1 == 0 ){
        변수들1 = '안팔아요';
        console.log(문자들[0] + 변수들1 + 문자들[1] + 변수들2 );
        //console.log(`바지다팔렸어요 양말` + 변수들2)
    }
}
해체분석기`바지${pants} 양말${socks}`; 